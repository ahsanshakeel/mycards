// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Marketplace.SaaS.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Operation
    {
        /// <summary>
        /// Initializes a new instance of the Operation class.
        /// </summary>
        public Operation()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Operation class.
        /// </summary>
        /// <param name="action">Possible values include: 'Unsubscribe',
        /// 'ChangePlan', 'ChangeQuantity', 'Suspend', 'Reinstate'</param>
        /// <param name="status">Possible values include: 'NotStarted',
        /// 'InProgress', 'Succeeded', 'Failed', 'Conflict'</param>
        public Operation(System.Guid? id = default(System.Guid?), System.Guid? activityId = default(System.Guid?), System.Guid? subscriptionId = default(System.Guid?), string offerId = default(string), string publisherId = default(string), string planId = default(string), int? quantity = default(int?), OperationActionEnum? action = default(OperationActionEnum?), System.DateTime? timeStamp = default(System.DateTime?), OperationStatusEnum? status = default(OperationStatusEnum?))
        {
            Id = id;
            ActivityId = activityId;
            SubscriptionId = subscriptionId;
            OfferId = offerId;
            PublisherId = publisherId;
            PlanId = planId;
            Quantity = quantity;
            Action = action;
            TimeStamp = timeStamp;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activityId")]
        public System.Guid? ActivityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public System.Guid? SubscriptionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "offerId")]
        public string OfferId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "publisherId")]
        public string PublisherId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "planId")]
        public string PlanId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "quantity")]
        public int? Quantity { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unsubscribe', 'ChangePlan',
        /// 'ChangeQuantity', 'Suspend', 'Reinstate'
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public OperationActionEnum? Action { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timeStamp")]
        public System.DateTime? TimeStamp { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotStarted', 'InProgress',
        /// 'Succeeded', 'Failed', 'Conflict'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public OperationStatusEnum? Status { get; set; }

    }
}
