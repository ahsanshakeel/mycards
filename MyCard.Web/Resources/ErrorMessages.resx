<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyNameRequired" xml:space="preserve">
    <value>Enter Company Name</value>
  </data>
  <data name="DomainNameRequired" xml:space="preserve">
    <value>Enter domain name</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Enter Email</value>
  </data>
  <data name="EmailSentError" xml:space="preserve">
    <value>We have encountered some problem in sending email</value>
  </data>
  <data name="EmailSentSuccess" xml:space="preserve">
    <value>Email has been sent successfully</value>
  </data>
  <data name="EmailValid" xml:space="preserve">
    <value>Email is not valid.</value>
  </data>
  <data name="ExceptionError" xml:space="preserve">
    <value>Some Error Occured.</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>Enter First Name</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Enter Last Name</value>
  </data>
  <data name="NoOfLicenseRequired" xml:space="preserve">
    <value>Enter Number of License</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Enter Password</value>
  </data>
  <data name="POUploadSuccess" xml:space="preserve">
    <value>PO has been uploaded successfull, email has been sent to you</value>
  </data>
  <data name="UserNamePasswordNotMatch" xml:space="preserve">
    <value>Username or Password do not match</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>Enter User Name</value>
  </data>
  <data name="ComparePasswordErrorMessage" xml:space="preserve">
    <value>Password and Confirm Password do not match</value>
  </data>
  <data name="ConfirmPasswordRequired" xml:space="preserve">
    <value>Enter Confirm Password</value>
  </data>
  <data name="PasswordLengthErrorMessage" xml:space="preserve">
    <value>Minimum password length is 8</value>
  </data>
  <data name="EmailNotExistErrorMessage" xml:space="preserve">
    <value>Your email does not exist</value>
  </data>
  <data name="DomainValid" xml:space="preserve">
    <value>Enter Valid Domain</value>
  </data>
  <data name="LicenseTypeRequired" xml:space="preserve">
    <value>Enter License Type</value>
  </data>
  <data name="LoginForAdminOnly" xml:space="preserve">
    <value>Only website administrator can login here.</value>
  </data>
  <data name="TrialLicenseRange" xml:space="preserve">
    <value>Must be between 1-20</value>
  </data>
  <data name="OldPasswordRequired" xml:space="preserve">
    <value>Enter Old Password</value>
  </data>
  <data name="OldPasswordNotCorrect" xml:space="preserve">
    <value>Old password is not correct.</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>Enter Address</value>
  </data>
  <data name="CityRequired" xml:space="preserve">
    <value>Enter City</value>
  </data>
  <data name="InvalidAddress" xml:space="preserve">
    <value>Invalid Address</value>
  </data>
  <data name="InvalidCity" xml:space="preserve">
    <value>Invalid City</value>
  </data>
  <data name="InvalidCompanyName" xml:space="preserve">
    <value>Invalid Company Name</value>
  </data>
  <data name="InvalidFirstName" xml:space="preserve">
    <value>Invalid First Name</value>
  </data>
  <data name="InvalidLastName" xml:space="preserve">
    <value>Invalid Last Name</value>
  </data>
  <data name="InvalidPhone" xml:space="preserve">
    <value>Invalid Phone No.</value>
  </data>
  <data name="InvalidState" xml:space="preserve">
    <value>Invalid State</value>
  </data>
  <data name="InvalidZip" xml:space="preserve">
    <value>Invalid Zip</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Enter Phone No.</value>
  </data>
  <data name="StateRequired" xml:space="preserve">
    <value>Enter State</value>
  </data>
  <data name="ZipRequired" xml:space="preserve">
    <value>Enter Zip</value>
  </data>
  <data name="SameDomainName" xml:space="preserve">
    <value>Email must be on same domain name</value>
  </data>
  <data name="DomainAlreadyRegistered" xml:space="preserve">
    <value>This domain is already registered</value>
  </data>
  <data name="BusinessTitleRequired" xml:space="preserve">
    <value>Enter BusinessTitle</value>
  </data>
  <data name="InvalidBusinessTitle" xml:space="preserve">
    <value>Invalid BusinessTitle</value>
  </data>
  <data name="InvalidName" xml:space="preserve">
    <value>Invalid Name</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Enter Name</value>
  </data>
  <data name="RegisterErrorMessage1" xml:space="preserve">
    <value>Error encountered registering with myCards™.</value>
  </data>
  <data name="RegisterErrorMessage2" xml:space="preserve">
    <value>Please review your details and submit the form again.</value>
  </data>
  <data name="RegisterTermMessage1" xml:space="preserve">
    <value>Error encountered registering with myCards™.</value>
  </data>
  <data name="RegisterTermMessage2" xml:space="preserve">
    <value>Please tick the checkbox to agree with terms and conditions.</value>
  </data>
  <data name="PurchaseErrorMessage1" xml:space="preserve">
    <value>Error encountered registering with myCards™.</value>
  </data>
  <data name="PurchaseErrorMessage2" xml:space="preserve">
    <value>Please review your details and submit the order again.</value>
  </data>
  <data name="PurchaseUploadPOErrorMessage1" xml:space="preserve">
    <value>Error occured in PO upload.</value>
  </data>
  <data name="PurchaseUploadPOErrorMessage2" xml:space="preserve">
    <value>Please review your details and submit the upload again.</value>
  </data>
  <data name="PurchaseUploadPOErrorMessage3" xml:space="preserve">
    <value>Error occured in PO upload.</value>
  </data>
  <data name="PurchaseUploadPOFileNotSelectedError" xml:space="preserve">
    <value>Please select a file to upload</value>
  </data>
  <data name="EmailAlreadyExists" xml:space="preserve">
    <value>Email already exists</value>
  </data>
  <data name="POUploadFileTypeError" xml:space="preserve">
    <value>Please upload pdf files only</value>
  </data>
  <data name="TermsAcceptError" xml:space="preserve">
    <value>Please accept the Terms of Use</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Minimum password length is 8 please select a combination of letters (A-z),numbers (0-9) and special character</value>
  </data>
  <data name="MandatoryFields" xml:space="preserve">
    <value>Please complete the highlighted mandatory fields</value>
  </data>
  <data name="EditCompanyLogoFileType" xml:space="preserve">
    <value>Please upload image (jpg or png formats only)</value>
  </data>
  <data name="AlreadyActivated" xml:space="preserve">
    <value>You have already activated your account.</value>
  </data>
  <data name="AlreadyActivatedLogin" xml:space="preserve">
    <value>Please login.</value>
  </data>
  <data name="NotActivatedMessage1" xml:space="preserve">
    <value>You are not activated. Kindly click on the link sent to your email at the time of registration or click</value>
  </data>
  <data name="NotActivatedMessage2" xml:space="preserve">
    <value>here</value>
  </data>
  <data name="NotActivatedMessage3" xml:space="preserve">
    <value>to resend the link</value>
  </data>
  <data name="PurchaseLicenseTypeError" xml:space="preserve">
    <value>Please select the license type</value>
  </data>
  <data name="Error_AuthChallengeNeeded" xml:space="preserve">
    <value>Caller needs to authenticate.</value>
    <comment>Error message when unable to retrieve the access token silently.</comment>
  </data>
  <data name="Error_Message" xml:space="preserve">
    <value>Error in</value>
  </data>
</root>