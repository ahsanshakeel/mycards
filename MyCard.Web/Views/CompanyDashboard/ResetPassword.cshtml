@model MyCard.Web.Models.PasswordResetViewModel

@{
    ViewBag.Title = @MyCard.Web.Resources.CaptionsAll.ResetPassword;
    Layout = "~/Views/Shared/_MasterLayoutAdmin.cshtml";
}


<div class=" col-xs-12">
    <p class="mar-bot20 book f-p">Minimum password length is 8 please select a combination of letters (A-z), numbers (0-9) and special characters (!@@#$ %^&*).</p><br>
    <div class="clearfix"></div>
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div div class=" col-xs-12">
        <div class=" col-xs-8">
            <div class="row">
                @*<p class="red-color four" hidden>@Html.ValidationSummary(false, "", new { @style = "color:red" })</p>*@
                @*<p> @Html.ValidationMessageFor(model => model.Password, "", new { @class = "red-color p-small medium" }) </p>*@
                @*<p> @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "red-color p-small medium" }) </p>*@
                <p id="errornotification" class="red-color p-small medium" hidden><i class=" fa fa-times-circle"></i> Please complete the highlighted mandatory fields</p>
                <p id="errorpasswordmatch" class="red-color p-small medium" hidden><i class=" fa fa-times-circle"></i> @MyCard.Web.Resources.ErrorMessages.ComparePasswordErrorMessage</p>
                <p id="ppassworderror" class="red-color p-small medium" hidden><i class=" fa fa-times-circle"></i> @MyCard.Web.Resources.ErrorMessages.InvalidPassword</p>

                @if (TempData["Error"] != null)
                {
                    <p class="red-color p-small medium"><i class=" fa fa-times-circle"></i>@TempData["Error"]</p>
                }
            </div>
        </div>
        <div class="clearfix"></div>

        <div class=" col-xs-5">
            <div class="row">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { placeholder = "Password" } })
            </div>
        </div>
        <div class="clearfix"></div>

        <div class=" col-xs-5">
            <div class="row">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { placeholder = "Confirm Password" } })
            </div>
        </div>
        <div class="clearfix"></div>

        <div class=" col-xs-5">
            <div class="row">
                <div>
                    <div class="pull-right"> <button type="button" class="submit" name="ResetPassword" id="ResetPassword">@MyCard.Web.Resources.CaptionsAll.ResetPassword</button> </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
       
    </div>
}


<script type="text/javascript">

    $(document).ready(function () {

        // Attach click handler to the submit button:
        $('#ResetPassword').click(function () {

            if ($('#Password').val() == '') {
                $('#Password').css('border-color', 'red');
                $('#ConfirmPassword').css('border-color', 'red');
                $('#errornotification').show();
                return false;
            }
            else {
                $('#Password').css('border-color', '');
                $('#ConfirmPassword').css('border-color', '');
                $('#errornotification').hide();
            }
            /////////////////
            if (!validatePassword($('#Password').val())) {
                $('#Password').css('border-color', 'red');
                $('#ConfirmPassword').css('border-color', 'red');
                $('#ppassworderror').show();
                return false;
            }
            else {
                $('#Password').css('border-color', '');
                $('#ConfirmPassword').css('border-color', '');
                $('#ppassworderror').hide();
            }
            ///////////////
            //if ($('#ConfirmPassword').val() == '') {
            //    $('#ConfirmPassword').css('border-color', 'red');
            //    $('#errornotification').show();
            //}
            //else {
            //    $('#ConfirmPassword').css('border-color', '');
            //}
            ///////////////

            //if ($('#Password').val() == '' || $('#ConfirmPassword').val() == '') {
            //    $('#errornotification').show();
            //    return false;
            //}
            //else {
            //    $('#errornotification').hide();
            //}
            ///////////////
            if ($('#Password').val() != $('#ConfirmPassword').val()) {
                $('#ConfirmPassword').css('border-color', 'red');
                $('#errorpasswordmatch').show();
                return false;
            }
            else {
                $('#ConfirmPassword').css('border-color', '');
                $('#errorpasswordmatch').hide();
            }
            ///////////////
            $("form").submit();
        });

        function validatePassword(sPassword) {
            //var filter = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;
            var filter = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[!@@#$ %^&*])[A-Za-z\d!@@#$ %^&*]{8,}$/;
            
            if (filter.test(sPassword)) {
                return true;
            }
            else {
                return false;
            }
        }

    });
</script>
